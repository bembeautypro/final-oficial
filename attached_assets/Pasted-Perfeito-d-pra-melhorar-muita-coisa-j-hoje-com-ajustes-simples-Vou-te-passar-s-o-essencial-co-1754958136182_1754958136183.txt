Perfeito — dá pra melhorar muita coisa já hoje com ajustes simples. Vou te passar só o essencial, com comandos prontos (1 por linha) pra colar no Shell do Replit. Depois é só git push e a Vercel redeploya.

⸻

Prioridades (ganho rápido)
	1.	Manifest local (some o erro do manifest + simplifica CSP)
	2.	robots.txt válido (zera os 120 erros)
	3.	LCP da imagem principal (melhora LCP: fetchpriority="high" + decoding="async")
	4.	GTM/GA fora do caminho crítico (carregar pós-load)
	5.	Tirar mídia pesada do Supabase (pelo menos o logo e a hero) pra servir da Vercel com cache longo
	6.	CSP ajustada (se quiser manter Ads/GTM sem erro no console)

⸻

1) Manifest local

Shell (Replit):

mkdir -p public
cat > public/site.webmanifest <<'EOF'
{
  "name": "NIVELA",
  "short_name": "NIVELA",
  "start_url": "/",
  "display": "standalone",
  "background_color": "#000000",
  "theme_color": "#000000",
  "icons": [
    { "src": "/favicon.ico", "sizes": "64x64 32x32 24x24 16x16", "type": "image/x-icon" }
  ]
}
EOF

Shell — apontar o <link rel="manifest"> para o local:

sed -i "s#href=['\"][^'\"]*site\.webmanifest['\"]#href=\"/site.webmanifest\"#g" index.html


⸻

2) robots.txt válido

Shell:

cat > public/robots.txt <<'EOF'
User-agent: *
Allow: /
Sitemap: https://nivela.bembeauty.com.br/sitemap.xml
EOF

(Se não tiver sitemap ainda, não tem problema — deixa assim por enquanto.)

⸻

3) Melhorar LCP da imagem principal

Shell — marcar imagem LCP com fetchpriority="high" e decoding="async"
(usa substituição bem conservadora: procura pelo alt do produto; ajuste o alt abaixo se for outro texto):

sed -i 's#alt="NIVELA® - Retexturizador hidro nutritivo de 1kg com fundo transparente"#alt="NIVELA® - Retexturizador hidro nutritivo de 1kg com fundo transparente" fetchpriority="high" decoding="async"#' index.html

Se a imagem LCP estiver renderizada por React (não direto no index.html), me diz o caminho do componente e eu te mando o patch do TSX.

⸻

4) Carregar GTM/GA depois do carregamento (tira bloqueio de render)

Shell — adia GTM/GA usando load/requestIdleCallback:

awk 'BEGIN{p=1} /googletagmanager.com\/gtm.js/ && p{print "<script>window.addEventListener(\"load\",function(){var s=document.createElement(\"script\");s.async=true;s.src=\"https://www.googletagmanager.com/gtm.js?id=GTM-KZW3RTWD\";document.head.appendChild(s)});</script>"; p=0; next} {print}' index.html > /tmp/idx && mv /tmp/idx index.html

(Isso substitui o carregamento imediato por “depois do load”. Se você usa consent mode, continua funcionando — só inicia um pouco depois.)

⸻

5) Servir logo e hero pela Vercel (melhor cache)

Shell — baixar e colocar no /public:

mkdir -p public/img
curl -fsSL "https://fdyzlqovxvdpkzlwuhjj.supabase.co/storage/v1/object/public/imagens/logo-bembeauty-transparente.png" -o public/img/logo.png
curl -fsSL "https://fdyzlqovxvdpkzlwuhjj.supabase.co/storage/v1/object/public/imagens/nivela-hero.webp" -o public/img/nivela-hero.webp

Shell — trocar referências no HTML (logo e hero):

sed -i 's#https://[^"]*/logo-bembeauty-transparente.png#/img/logo.png#g' index.html
sed -i 's#https://[^"]*/nivela-hero.webp#/img/nivela-hero.webp#g' index.html

(Se a hero estiver nos componentes React, me diga o arquivo e eu mando o patch.)

⸻

6) CSP (se quiser sumir com os avisos do Ads/GTM)

Se vai manter Ads/GTM, use esta CSP. Se não for usar Ads, eu te passo uma versão ainda mais restrita.

Shell — atualizar vercel.json:

cat > vercel.json <<'EOF'
{
  "buildCommand": "npm run build",
  "outputDirectory": "dist",
  "headers": [
    {
      "source": "/(.*)",
      "headers": [
        {
          "key": "Content-Security-Policy",
          "value": "default-src 'self'; connect-src 'self' https://*.supabase.co https://*.supabase.in https://www.google-analytics.com https://region1.google-analytics.com https://www.googletagmanager.com https://pagead2.googlesyndication.com; img-src 'self' data: https://*.supabase.co https://www.googletagmanager.com https://www.google-analytics.com https://pagead2.googlesyndication.com; script-src 'self' 'unsafe-inline' https://www.googletagmanager.com https://www.google-analytics.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; manifest-src 'self'; frame-src 'self' https://www.googletagmanager.com https://googleads.g.doubleclick.net; object-src 'none'; base-uri 'self';"
        }
      ]
    }
  ]
}
EOF


⸻

Commit + Push

Shell:

git add public/site.webmanifest public/robots.txt public/img/logo.png public/img/nivela-hero.webp index.html vercel.json

git commit -m "perf: LCP/manifest/robots + adiar GTM; mover logo/hero p/ Vercel; CSP ajustada"

git push origin main

A Vercel vai redeployar.
Depois, roda o PageSpeed de novo; tende a melhorar LCP, parar os erros de manifest/robots, reduzir erros de CSP e diminuir JS/CSS no caminho crítico.

⸻

Sobre os outros pontos do relatório
	•	Forçado de reflow (85 ms): vem de libs (provável layout + medições). Podemos atacar depois, mas já reduzindo scripts no “critical path” ajuda.
	•	Vídeo manifesto (11.9 MB): hoje ele está com cache de 1h no Supabase; ideal mover para /public/video/ ou colocar num CDN com Cache-Control longo e preload=“none” + poster. Se quiser, te mando o patch.
	•	“Reduzir JS/CSS não usado”: adiamos GTM, já ajuda bastante. Se quiser agressivo, dá pra particionar componentes pesados com import() (posso indicar os pontos certos).
	•	Contraste e hierarquia de heading: depois ajusto a classe de cor do rodapé e normalizo a ordem dos headings (H1 > H2 > H3…).

Se topar, depois que subir essas mudanças, me manda o novo relatório do PageSpeed que eu já te passo a segunda rodada de otimizações.