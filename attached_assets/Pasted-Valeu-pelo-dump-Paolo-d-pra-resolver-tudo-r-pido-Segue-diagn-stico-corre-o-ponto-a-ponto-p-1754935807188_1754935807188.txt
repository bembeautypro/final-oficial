Valeu pelo dump, Paolo — dá pra resolver tudo rápido. Segue diagnóstico → correção ponto a ponto + patches prontos.

⸻

1) “X-Frame-Options… may only be set via HTTP header”

Causa: está usando <meta http-equiv="X-Frame-Options"> no HTML. Isso não funciona.
Correção: remover a meta do HTML e definir via header (ou usar CSP frame-ancestors).

Patch
	•	Remova do <head>: qualquer <meta http-equiv="X-Frame-Options" …>.
	•	No servidor (headers):

# preferível usar CSP
Content-Security-Policy: frame-ancestors 'self';

# se quiser também:
X-Frame-Options: SAMEORIGIN


⸻

2) “The entry type ‘cls’ / ‘lcp’ / ‘inp’ does not exist…”

Causa: o PerformanceObserver aceita tipos nativos (layout-shift, largest-contentful-paint, event), não cls/lcp/inp.
Correção: mapear corretamente e calcular as métricas.

Patch (substituir seu events.ts de Web Vitals por este bloco)

// src/analytics/webvitals.ts
export function initWebVitalsToGA4() {
  // helper
  // @ts-ignore
  const gtag = window.gtag ? window.gtag : null;
  const send = (name: 'CLS'|'LCP'|'INP', value: number, id: string) => {
    if (!gtag) return;
    gtag('event', name, {
      value: Math.round(name === 'CLS' ? value * 1000 : value), // CLS em ‰ para GA4
      event_id: id,
      non_interaction: true
    });
  };

  // CLS: soma dos layout-shift sem interação recente
  if ('PerformanceObserver' in window) {
    try {
      let cls = 0;
      // @ts-ignore
      const poCLS = new PerformanceObserver((list) => {
        list.getEntries().forEach((e: any) => {
          if (!e.hadRecentInput) cls += e.value || 0;
        });
        send('CLS', cls, 'cls-' + String(Date.now()));
      });
      // @ts-ignore
      poCLS.observe({ type: 'layout-shift', buffered: true });
    } catch {}
    try {
      // LCP: maior 'largest-contentful-paint'
      let lcp = 0;
      // @ts-ignore
      const poLCP = new PerformanceObserver((list) => {
        const last = list.getEntries().pop() as any;
        if (last && last.renderTime) lcp = last.renderTime;
        else if (last && last.loadTime) lcp = last.loadTime;
        // envia no primeiro callback (buffered já pega o último)
        send('LCP', lcp, 'lcp-' + String(Date.now()));
      });
      // @ts-ignore
      poLCP.observe({ type: 'largest-contentful-paint', buffered: true });
    } catch {}
    try {
      // INP (aproximação): maior duração de 'event' (Event Timing)
      let maxDuration = 0;
      // @ts-ignore
      const poINP = new PerformanceObserver((list) => {
        list.getEntries().forEach((e: any) => {
          // algumas entradas vêm como 'interaction' em navegadores modernos
          const d = e.duration || 0;
          if (d > maxDuration) maxDuration = d;
        });
        // envia uma estimativa (buffered pega histórico)
        send('INP', maxDuration, 'inp-' + String(Date.now()));
      });
      // @ts-ignore
      poINP.observe({ type: 'event', buffered: true });
    } catch {}
  }
}

E inicialize isso (uma vez) no bootstrap:

import { initWebVitalsToGA4 } from './analytics/webvitals';
initWebVitalsToGA4();


⸻

3) Framer Motion: “container has a non-static position…”

Causa: o contêiner que calcula offset está com position: static (default).
Correção: adicionar position: relative (ou fixed/absolute) no wrapper do componente animado/scroll.

Patch

/* ex.: no container de seção com animações/scroll */
.section-animated,
.motion-container {
  position: relative;  /* resolve o aviso */
}

Garanta que a classe esteja aplicada ao wrapper que o Motion usa como referência.

⸻

4) Supabase 401 no POST /rest/v1/distribuidores?select=*

Causa provável: client não está usando a ANON KEY em runtime (ENV faltando/errado) ou você está chamando o endpoint REST direto sem cabeçalhos.
Como checar rápido no console:

console.log('ENV URL', import.meta.env.VITE_SUPABASE_URL);
console.log('ENV ANON', (import.meta.env.VITE_SUPABASE_ANON_KEY || '').slice(0,10) + '…');

Se vier undefined → o build não recebeu as ENV.

Checklist de correção
	•	Vercel / Replit: setar VITE_SUPABASE_URL e VITE_SUPABASE_ANON_KEY nas ENV de build (não só local).
	•	Rebuild do projeto após alterar ENV.
	•	Use o client oficial (não faça fetch direto na REST).

Patch supabase client (garante headers corretos):

// src/lib/supabaseClient.ts
import { createClient } from '@supabase/supabase-js';

const url  = import.meta.env.VITE_SUPABASE_URL;
const anon = import.meta.env.VITE_SUPABASE_ANON_KEY;

if (!url || !anon) {
  console.error('[Supabase] ENV ausentes. Defina VITE_SUPABASE_URL e VITE_SUPABASE_ANON_KEY');
}

export const supabase = createClient(url!, anon!, {
  auth: { persistSession: false }, // forms públicos
});

Patch de insert (evita 401 e retorna o registro):

// em vez de fetch REST:
const { data, error } = await supabase
  .from('distribuidores')
  .insert([{
    nome, email: email.toLowerCase().trim(),
    telefone, tipo_estabelecimento,
    utm_source, utm_medium, utm_campaign, utm_content, utm_term,
    hp: '' // se tiver honeypot, deixe vazio
  }])
  .select('*'); // precisa do .select() para retornar dados no PostgREST novo

if (error) console.error('[Supabase] insert distribuidores', error);

Se por algum motivo precisar usar fetch REST, terá que enviar dois headers obrigatórios:

await fetch(`${url}/rest/v1/distribuidores`, {
  method: 'POST',
  headers: {
    'Content-Type': 'application/json',
    'apikey': anon,
    'Authorization': `Bearer ${anon}`,
    'Prefer': 'return=representation' // para retornar dado
  },
  body: JSON.stringify({...})
});

RLS: com as políticas que já criamos (INSERT para anon), 401 some assim que o client enviar o Bearer anon corretamente.

⸻

5) Re-testar vídeos

Seu ajuste anterior (autoplay muted sem controles + clamp de largura) segue ok. Só garanta que o CSS foi importado e o IntersectionObserver foi inicializado para pausar fora de viewport.

⸻

6) Roteiro de verificação (2 minutos)
	•	ENV: VITE_SUPABASE_URL e VITE_SUPABASE_ANON_KEY aparecem no console.log acima?
	•	Form distribuidor: envia → status 200/201 e sem 401.
	•	Console: sem X-Frame-Options warning (meta removida).
	•	Console: sem erros de Web Vitals (tipos corrigidos).
	•	Framer Motion: aviso sumiu após position: relative.
	•	GA4 DebugView: recebe generate_lead_distribuidor e Web Vitals.

Se quiser, te mando um diff compacto (JS/TS + CSS) pronto para o Replit aplicar de uma vez. Quer?